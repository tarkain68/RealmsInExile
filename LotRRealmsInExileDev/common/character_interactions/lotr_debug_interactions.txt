start_prospecting_scheme_interaction = {
	icon = icon_scheme_generate_claim
	interface_priority = 50
	category = interaction_category_laamp

	target_type = title
	target_filter = recipient_de_jure_titles

	can_be_picked_title = {
		scope:target = {
			tier = tier_county
			custom_tooltip = {
				text = activity_mining_county_has_no_valid_prospecting_locations_long_desc
				any_county_province = {
					valid_mining_activity_location = no
					OR = {
						terrain = mountains
						terrain = halls
						terrain = desert_mountains
					}
				}
			}
		}
	}

	send_name = START_SCHEME

	scheme = laamp_mining_prospecting_contract_scheme

	is_shown = {
		scope:recipient = {
			is_vassal_or_below_of = scope:actor
		}
	}

	is_valid_showing_failures_only = {
		custom_tooltip = {
			text = activity_mining_character_has_no_valid_prospecting_locations_long_desc
			scope:recipient = {
				any_held_title = {
					tier = tier_county
					any_county_province = {
						valid_mining_activity_location = no
						OR = {
							terrain = mountains
							terrain = halls
							terrain = desert_mountains
						}
					}
				}
			}
		}
	}

	desc = start_prospecting_scheme_interaction.desc

	# Scheme Starter Packages
	# options_heading = schemes.t.agent_packages
	# send_options_exclusive = yes
	# ## Balanced agents.
	# send_option = {
	# 	flag = agent_focus_balance
	# 	current_description = start_generate_claim_interaction.tt.agent_focus_balance
	# }
	# ## Focused on Success Chance.
	# send_option = {
	# 	flag = agent_focus_success
	# 	current_description = start_generate_claim_interaction.tt.agent_focus_success
	# }
	# ## Focused on Speed.
	# send_option = {
	# 	flag = agent_focus_speed
	# 	current_description = start_generate_claim_interaction.tt.agent_focus_speed
	# }
	# ## Focused on Secrecy.
	# send_option = {
	# 	flag = agent_focus_secrecy
	# 	current_description = start_generate_claim_interaction.tt.agent_focus_secrecy
	# }

	on_accept = {
		scope:target = {
			random_county_province = {
				limit = {
					valid_mining_activity_location = no
					OR = {
						terrain = mountains
						terrain = halls
						terrain = desert_mountains
					}
				}
				barony = {
					save_scope_as = prospecting_barony
				}
			}
		}
		scope:actor = {
			begin_scheme_basic_effect = {
				SCHEME_TYPE = laamp_mining_prospecting_contract_scheme
				TARGET_TYPE = target_title
				TARGET_SCOPE = scope:prospecting_barony
			}
			trigger_event = mining.9000
		}
	}

	auto_accept = yes

	ai_will_do = {
		base = 5
	}
}

settle_wilderness_immediately_interaction = {
	category = interaction_debug_realms
	use_diplomatic_range = no
	common_interaction = no
	ignores_pending_interaction_block = yes
	icon = realms_debug
	is_shown = {
		debug_only = yes
		scope:recipient = scope:actor
		scope:recipient = { is_landed = yes }
		scope:actor = {
			any_held_county = {
				title_province = { has_holding_type = settlement_holding }
			}
		}
	}
	
	on_accept = {
		scope:actor = {
			every_held_county = {
				limit = { title_province = { has_holding_type = settlement_holding } title_province = { terrain = halls }}
				title_province = { set_holding_type = dwarven_holding }
				change_development_level = 3
			}
			if = {
				limit = { 
					OR = {
						government_has_flag = government_is_feudal
						government_has_flag = government_is_clan
						government_has_flag = government_is_administrative
					}
				}
				every_held_county = {
					limit = { title_province = { has_holding_type = settlement_holding } }
					title_province = { set_holding_type = castle_holding }
					change_development_level = 3
				}
			} else_if = {
				limit = { government_has_flag = government_is_tribal }
				every_held_county = {
					limit = { title_province = { has_holding_type = settlement_holding } }
					title_province = { set_holding_type = tribal_holding }
					change_development_level = 3
				}
			} else_if = {
				limit = { government_has_flag = government_is_elven }
				every_held_county = {
					limit = { title_province = { has_holding_type = settlement_holding } }
					title_province = { set_holding_type = elven_holding }
					change_development_level = 3
				}
			} else_if = {
				limit = { government_has_flag = government_is_hobbit }
				every_held_county = {
					limit = { title_province = { has_holding_type = settlement_holding } }
					title_province = { set_holding_type = city_holding }
					change_development_level = 3
				}
			}
			
			correct_wastelands_tracker = yes
			remove_upkeep_modifier = yes
			trigger_event = {
				id = wastelands.0007
				days = 1
			}
		}
	}
	
	auto_accept = yes
}

make_tributary_immediately_interaction = {
	category = interaction_debug_realms
	use_diplomatic_range = no
	common_interaction = yes
	ignores_pending_interaction_block = yes
	icon = realms_debug

	is_shown = {
		debug_only = yes
		scope:recipient != scope:actor
		scope:recipient = { is_landed = yes highest_held_title_tier > tier_barony }
		scope:actor = { is_landed = yes highest_held_title_tier > tier_barony }
	}
	
	can_send = {
		always = yes
	}

	# Release vassal as client state
	send_option = {
		flag = client_state
		localization = client_state
		starts_enabled = { always = yes	}
	}

	# Release vassal as tributary state
	send_option = {		
		flag = tributary_state
		localization = tributary_state
	}

	# Release vassal as protectorate
	send_option = {		
		flag = protectorate_state
		localization = protectorate_state
	}

	auto_accept = yes

	on_accept = {
		if = {
			limit = { scope:recipient = { has_variable = my_suzerain } }
			scope:recipient = { free_tributary = yes }
		}

		
		# The options (in-game) show up really weird if "else if" is used, so using multiple "if" statements is better in this situation
		if = { # Client state
			limit = { scope:client_state = yes }
			custom_tooltip = {
				text = lotr_release_as_client_state_effect_tt
				make_tributary = {
					TYPE = tributary_non_permanent
					SUZERAIN = scope:actor
					TRIBUTARY = scope:recipient
				}
			}
		}
		if = { # Tributary state
			limit = { scope:tributary_state = yes }
			custom_tooltip = {
				text = lotr_release_as_tributary_state_effect_tt
				make_tributary = {
					TYPE = tributary_permanent
					SUZERAIN = scope:actor
					TRIBUTARY = scope:recipient
				}
			}
		}
		if = { # Protectorate state
			limit = { scope:protectorate_state = yes }
			custom_tooltip = {
				text = lotr_release_as_protectorate_state_effect_tt
				make_tributary = {
					TYPE = tributary_protectorate
					SUZERAIN = scope:actor
					TRIBUTARY = scope:recipient
				}
			}
		}
	}
	
	auto_accept = yes
}